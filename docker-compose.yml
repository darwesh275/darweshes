
services:
  # Frontend (React)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - '3000:3000'  # Map container port 3000 to localhost:3000
    environment:
      - CHOKIDAR_USEPOLLING=true  # Ensure React's hot-reloading works inside Docker
    volumes:
      - ./frontend/src:/app/src  # Bind-mount the React source code for real-time updates
      - ./frontend/public:/app/public  # Bind-mount the public directory
      - ./frontend/package.json:/app/package.json  # Persist package.json to ensure installs persist
      - ./frontend/package-lock.json:/app/package-lock.json  # Persist package-lock.json
      - frontend_node_modules:/app/node_modules  # Use Docker volume to persist node_modules
    networks:
      - app-network  # Use shared network

  # Backend (Node.js + Express)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - '5000:5000'  # Map container port 5000 to localhost:5000
    environment:
      - MONGODB_URI=mongodb://mongo:27017/mytestdb
    volumes:
      - ./backend/src:/app/src  # Bind-mount the backend source code for real-time updates
      - ./backend/package.json:/app/package.json  # Persist package.json
      - ./backend/package-lock.json:/app/package-lock.json  # Persist package-lock.json
      - backend_node_modules:/app/node_modules  # Use Docker volume to persist node_modules
    networks:
      - app-network  # Use shared network
    depends_on:
      - mongo  # Ensure backend starts after MongoDB

  # MongoDB (Database)
  mongo:
    image: mongo:4  # Use MongoDB version 4
    ports:
      - '27017:27017'  # Map MongoDB port
    volumes:
      - mongo_data:/data/db  # Persist database data
    networks:
      - app-network  # Use shared network
  # Metabase For Frontend Dashboards And Searching
  metabase:
    image: metabase/metabase
    environment:
      - MB_DB_FILE=/metabase-data/metabase.db
      - MB_PORT=3001  # Set Metabase to run on port 3001
    ports:
      - "3001:3000"
    volumes:
      - metabase-data:/metabase-data
    networks:
      - app-network  # Use shared network

# Define volumes to persist MongoDB and node_modules data
volumes:
  mongo_data:
  frontend_node_modules:  # Volume for frontend node_modules
  backend_node_modules:   # Volume for backend node_modules
  metabase-data:          # Volume for Metabase

# Define networks for all services
networks:
  app-network:
    driver: bridge
